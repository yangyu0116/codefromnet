<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE package SYSTEM "http://pear.php.net/dtd/package-1.0">
<package version="1.0">
  <name>PHP_Fork</name>
  <summary>PHP_Fork class. Wrapper around the pcntl_fork() stuff with a API set like Java language</summary>
  <description>PHP_Fork class. Wrapper around the pcntl_fork() stuff
with a API set like Java language.
Practical usage is done by extending this class, and re-defining
the run() method.
[see basic example]
This way PHP developers can enclose logic into a class that extends
PHP_Fork, then execute the start() method that forks a child process.
Communications with the forked process is ensured by using a Shared Memory
Segment; by using a user-defined signal and this shared memory developers
can access to child process methods that returns a serializable variable.
The shared variable space can be accessed with the tho methods:
o void setVariable($name, $value)
o mixed getVariable($name)
$name must be a valid PHP variable name;
$value must be a variable or a serializable object.
Resources (db connections, streams, etc.) cannot be serialized and so they're not correctly handled.
Requires PHP build with --enable-cli --with-pcntl --enable-shmop.
Only runs on *NIX systems, because Windows lacks of the pcntl ext.
@example browser_pool.php an interactive tool to perform multiple cuncurrent request over an URL.
@example simple_controller.php shows how to attach a controller to started pseudo-threads.
@example exec_methods.php shows a workaround to execute methods into the child process.
@example passing_vars.php shows variable exchange between the parent process and started pseudo-threads.
@example basic.php a basic example, only two pseudo-threads that increment a counter simultaneously.</description>
  <maintainers>
    <maintainer>
      <user>lucamariano</user>
      <name>Luca Mariano</name>
      <email>luca.mariano@email.it</email>
      <role>lead</role>
    </maintainer>
  </maintainers>
  <release>
    <version>0.3.0</version>
    <date>2005-03-24</date>
    <license>PHP License</license>
    <state>beta</state>
    <notes>Added isActive() facilty to check if the process is into its run() method.
           Added IPC segments cleanup after the stop() method is called (this totally free up detached shared memory as revealed by the ipcs command).
	   Added a complex usage example (examples/browser_pool.php).
	   Some minor changes into example scripts to accomplish php5 syntax rules.</notes>
    <deps>
      <dep type="ext" rel="has">pcntl</dep>
      <dep type="ext" rel="has">shmop</dep>
      <dep type="ext" rel="has">posix</dep>
      <dep type="sapi" rel="has">cli</dep>
    </deps>
    <provides type="class" name="PHP_Fork" />
    <provides type="function" name="PHP_Fork::isRunning" />
    <provides type="function" name="PHP_Fork::isActive" />
    <provides type="function" name="PHP_Fork::setVariable" />
    <provides type="function" name="PHP_Fork::getVariable" />
    <provides type="function" name="PHP_Fork::setAlive" />
    <provides type="function" name="PHP_Fork::getLastAlive" />
    <provides type="function" name="PHP_Fork::getName" />
    <provides type="function" name="PHP_Fork::getPid" />
    <provides type="function" name="PHP_Fork::register_callback_func" />
    <provides type="function" name="PHP_Fork::run" />
    <provides type="function" name="PHP_Fork::setName" />
    <provides type="function" name="PHP_Fork::start" />
    <provides type="function" name="PHP_Fork::stop" />
    <filelist>
      <file role="doc" baseinstalldir="PHP" md5sum="05832080ff68d875a856f30ad49df650" name="examples/basic.php"/>
      <file role="doc" baseinstalldir="PHP" md5sum="53cce154d5a4ad7c6d8197970a3efd9d" name="examples/exec_methods.php"/>
      <file role="doc" baseinstalldir="PHP" md5sum="fe53b8ef0ea963c49628a355aec002ed" name="examples/passing_vars.php"/>
      <file role="doc" baseinstalldir="PHP" md5sum="d898c4001e8a2f24240e9a6836ba9786" name="examples/simple_controller.php"/>
      <file role="doc" baseinstalldir="PHP" md5sum="4a1a636db9e55a6a66d7173b42842411" name="examples/browser_pool.php"/>
      <file role="php" baseinstalldir="PHP" md5sum="0d6d101001cb342fd25ae39194d58870" name="Fork.php"/>
    </filelist>
  </release>
  <changelog>
    <release>
      <version>0.2.0</version>
      <date>2005-01-04</date>
      <license>PHP License</license>
      <state>beta</state>
      <notes>Added dependancies into package.xml (bug #2758)
</notes>
    </release>
    <release>
      <version>0.1.0</version>
      <date>2004-03-17</date>
      <license>PHP License</license>
      <state>beta</state>
      <notes>Initial release

</notes>
    </release>
  </changelog>
</package>
